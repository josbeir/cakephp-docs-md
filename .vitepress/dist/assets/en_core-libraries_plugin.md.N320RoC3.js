import{_ as i,c as s,o as e,ag as t}from"./chunks/framework.DRADY2L-.js";const g=JSON.parse('{"title":"Plugin Class","description":"","frontmatter":{"title":"Plugin Class","keywords":"compatible implementation,model behaviors,path management,loading files,php class,class loading,model behavior,class location,component model,management class,autoloader,classname,directory location,override,conventions,lib,textile,cakephp,php classes,loaded"},"headers":[],"relativePath":"en/core-libraries/plugin.md","filePath":"en/core-libraries/plugin.md","lastUpdated":null}'),n={name:"en/core-libraries/plugin.md"};function l(p,a,h,o,r,d){return e(),s("div",null,[...a[0]||(a[0]=[t('<h1 id="plugin-class" tabindex="-1">Plugin Class <a class="header-anchor" href="#plugin-class" aria-label="Permalink to &quot;Plugin Class&quot;">​</a></h1><p><strong>Namespace:</strong> <code>Cake\\Core</code></p><h3 id="class-cake-core-plugin" tabindex="-1">Class <code>Cake\\Core\\Plugin</code> <a class="header-anchor" href="#class-cake-core-plugin" aria-label="Permalink to &quot;Class `Cake\\Core\\Plugin`&quot;">​</a></h3><p>The Plugin class is responsible for resource location and path management of plugins.</p><h2 id="locating-plugins" tabindex="-1">Locating Plugins <a class="header-anchor" href="#locating-plugins" aria-label="Permalink to &quot;Locating Plugins&quot;">​</a></h2><h4 id="static-method-cake-core-plugin-path-string-plugin" tabindex="-1">Static Method <code>Cake\\Core\\Plugin::path(string $plugin)</code> <a class="header-anchor" href="#static-method-cake-core-plugin-path-string-plugin" aria-label="Permalink to &quot;Static Method `Cake\\Core\\Plugin::path(string $plugin)`&quot;">​</a></h4><p>Plugins can be located with Plugin. Using <code>Plugin::path(&#39;DebugKit&#39;);</code> for example, will give you the full path to the DebugKit plugin</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Plugin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;DebugKit&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="check-if-a-plugin-is-loaded" tabindex="-1">Check if a Plugin is Loaded <a class="header-anchor" href="#check-if-a-plugin-is-loaded" aria-label="Permalink to &quot;Check if a Plugin is Loaded&quot;">​</a></h2><p>You can check dynamically inside your code if a specific plugin has been loaded</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$isLoaded </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Plugin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isLoaded</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;DebugKit&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Use <code>Plugin::loaded()</code> if you want to get a list of all currently loaded plugins.</p><h2 id="finding-paths-to-namespaces" tabindex="-1">Finding Paths to Namespaces <a class="header-anchor" href="#finding-paths-to-namespaces" aria-label="Permalink to &quot;Finding Paths to Namespaces&quot;">​</a></h2><h4 id="static-method-cake-core-plugin-classpath-string-plugin" tabindex="-1">Static Method <code>Cake\\Core\\Plugin::classPath(string $plugin)</code> <a class="header-anchor" href="#static-method-cake-core-plugin-classpath-string-plugin" aria-label="Permalink to &quot;Static Method `Cake\\Core\\Plugin::classPath(string $plugin)`&quot;">​</a></h4><p>Used to get the location of the plugin&#39;s class files</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> App</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">classPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;DebugKit&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="finding-paths-to-resources" tabindex="-1">Finding Paths to Resources <a class="header-anchor" href="#finding-paths-to-resources" aria-label="Permalink to &quot;Finding Paths to Resources&quot;">​</a></h2><h4 id="static-method-cake-core-plugin-templatepath-string-plugin" tabindex="-1">Static Method <code>Cake\\Core\\Plugin::templatePath(string $plugin)</code> <a class="header-anchor" href="#static-method-cake-core-plugin-templatepath-string-plugin" aria-label="Permalink to &quot;Static Method `Cake\\Core\\Plugin::templatePath(string $plugin)`&quot;">​</a></h4><p>The method returns the path to the plugins&#39; templates</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Plugin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">templatePath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;DebugKit&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>The same goes for the config path::</p><pre><code>$path = Plugin::configPath(&#39;DebugKit&#39;);\n</code></pre>',22)])])}const k=i(n,[["render",l]]);export{g as __pageData,k as default};
