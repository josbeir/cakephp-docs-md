import{_ as i,c as a,o as n,ag as e}from"./chunks/framework.DRADY2L-.js";const g=JSON.parse('{"title":"Plugin tool","description":"","frontmatter":{"title":"Plugin tool","keywords":"plugin,assets,tool,load,unload"},"headers":[],"relativePath":"en/console-commands/plugin.md","filePath":"en/console-commands/plugin.md","lastUpdated":null}'),l={name:"en/console-commands/plugin.md"};function t(p,s,o,d,h,r){return n(),a("div",null,[...s[0]||(s[0]=[e(`<p><a id="plugin-shell"></a></p><h1 id="plugin-tool" tabindex="-1">Plugin Tool <a class="header-anchor" href="#plugin-tool" aria-label="Permalink to &quot;Plugin Tool&quot;">​</a></h1><p>The plugin tool allows you to load and unload plugins via the command prompt. If you need help, run:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bin/cake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> plugin</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --help</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="loading-plugins" tabindex="-1">Loading Plugins <a class="header-anchor" href="#loading-plugins" aria-label="Permalink to &quot;Loading Plugins&quot;">​</a></h3><p>Via the <code>Load</code> task you are able to load plugins in your <strong>config/bootstrap.php</strong>. You can do this by running:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bin/cake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> plugin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> load</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MyPlugin</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>This will add the following to your <strong>src/Application.php</strong>::</p><pre><code>// In the bootstrap method add:
$this-&gt;addPlugin(&#39;MyPlugin&#39;);
</code></pre><h3 id="unloading-plugins" tabindex="-1">Unloading Plugins <a class="header-anchor" href="#unloading-plugins" aria-label="Permalink to &quot;Unloading Plugins&quot;">​</a></h3><p>You can unload a plugin by specifying its name:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bin/cake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> plugin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unload</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MyPlugin</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>This will remove the line <code>$this-&gt;addPlugin(&#39;MyPlugin&#39;,...)</code> from <strong>src/Application.php</strong>.</p><h3 id="plugin-assets" tabindex="-1">Plugin Assets <a class="header-anchor" href="#plugin-assets" aria-label="Permalink to &quot;Plugin Assets&quot;">​</a></h3><p>CakePHP by default serves plugins assets using the <code>AssetMiddleware</code> middleware. While this is a good convenience, it is recommended to symlink / copy the plugin assets under app&#39;s webroot so that they can be directly served by the web server without invoking PHP. You can do this by running:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bin/cake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> plugin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> assets</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> symlink</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Running the above command will symlink all plugins assets under app&#39;s webroot. On Windows, which doesn&#39;t support symlinks, the assets will be copied in respective folders instead of being symlinked.</p><p>You can symlink assets of one particular plugin by specifying its name:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bin/cake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> plugin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> assets</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> symlink</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MyPlugin</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,19)])])}const c=i(l,[["render",t]]);export{g as __pageData,c as default};
