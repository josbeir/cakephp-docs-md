import{_ as a,c as i,o as t,ag as r}from"./chunks/framework.DRADY2L-.js";const c=JSON.parse('{"title":"Appendices","description":"","frontmatter":{"title":"Appendices","keywords":"migration guide,migration path,new features,glossary"},"headers":[],"relativePath":"en/appendices.md","filePath":"en/appendices.md","lastUpdated":null}'),n={name:"en/appendices.md"};function o(s,e,p,h,m,d){return t(),i("div",null,[...e[0]||(e[0]=[r('<h1 id="appendices" tabindex="-1">Appendices <a class="header-anchor" href="#appendices" aria-label="Permalink to &quot;Appendices&quot;">​</a></h1><p>Appendices contain information regarding the new features introduced in each version and the migration path between versions.</p><h2 id="migration-guides" tabindex="-1">Migration Guides <a class="header-anchor" href="#migration-guides" aria-label="Permalink to &quot;Migration Guides&quot;">​</a></h2><p>[appendices/migration-guides`</p><h2 id="backwards-compatibility-shimming" tabindex="-1">Backwards Compatibility Shimming <a class="header-anchor" href="#backwards-compatibility-shimming" aria-label="Permalink to &quot;Backwards Compatibility Shimming&quot;">​</a></h2><p>If you need/want to shim 4.x behavior, or partially migrate in steps, check out the <a href="https://github.com/dereuromark/cakephp-shim" target="_blank" rel="noreferrer">Shim plugin</a> that can help mitigate some BC breaking changes.</p><h2 id="forwards-compatibility-shimming" tabindex="-1">Forwards Compatibility Shimming <a class="header-anchor" href="#forwards-compatibility-shimming" aria-label="Permalink to &quot;Forwards Compatibility Shimming&quot;">​</a></h2><p>Forwards compatibility shimming can prepare your 4.x app for the next major release (5.x).</p><p>If you already want to shim 5.x behavior into 4.x, check out the <a href="https://github.com/dereuromark/cakephp-shim" target="_blank" rel="noreferrer">Shim plugin</a>. This plugin aims to mitigate some backwards compatibility breakage and help backport features from 5.x to 4.x. The closer your 3.x app is to 4.x, the smaller will be the diff of changes, and the smoother will be the final upgrade.</p><h2 id="general-information" tabindex="-1">General Information <a class="header-anchor" href="#general-information" aria-label="Permalink to &quot;General Information&quot;">​</a></h2>',10)])])}const g=a(n,[["render",o]]);export{c as __pageData,g as default};
