import{_ as a,c as i,o as n,ag as e}from"./chunks/framework.DRADY2L-.js";const k=JSON.parse('{"title":"Running Shells as cronjobs","description":"","frontmatter":{"title":"Running Shells as cronjobs","keywords":"cronjob,bash script,crontab"},"headers":[],"relativePath":"en/console-commands/cron-jobs.md","filePath":"en/console-commands/cron-jobs.md","lastUpdated":null}'),o={name:"en/console-commands/cron-jobs.md"};function t(r,s,l,h,p,c){return n(),i("div",null,[...s[0]||(s[0]=[e(`<h1 id="running-shells-as-cron-jobs" tabindex="-1">Running Shells as Cron Jobs <a class="header-anchor" href="#running-shells-as-cron-jobs" aria-label="Permalink to &quot;Running Shells as Cron Jobs&quot;">​</a></h1><p>A common thing to do with a shell is making it run as a cronjob to clean up the database once in a while or send newsletters. This is trivial to setup, for example</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  cd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">full</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">to</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">root</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;&amp;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> bin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cake</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> myshell</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> myparam</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><pre><code># *    *    *    *    *  command to execute
# │    │    │    │    │
# │    │    │    │    │
# │    │    │    │    \\───── day of week (0 - 6) (0 to 6 are Sunday to Saturday,
# |    |    |    |           or use names)
# │    │    │    \\────────── month (1 - 12)
# │    │    \\─────────────── day of month (1 - 31)
# │    \\──────────────────── hour (0 - 23)
# \\───────────────────────── min (0 - 59)
</code></pre><p>You can see more info here: <a href="https://en.wikipedia.org/wiki/Cron" target="_blank" rel="noreferrer">https://en.wikipedia.org/wiki/Cron</a></p><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p>Use <code>-q</code> (or <code>--quiet</code>) to silence any output for cronjobs.</p></div><h3 id="cron-jobs-on-shared-hosting" tabindex="-1">Cron Jobs on Shared Hosting <a class="header-anchor" href="#cron-jobs-on-shared-hosting" aria-label="Permalink to &quot;Cron Jobs on Shared Hosting&quot;">​</a></h3><p>On some shared hostings <code>cd /full/path/to/root &amp;&amp; bin/cake mycommand myparam</code> might not work. Instead you can use <code>php /full/path/to/root/bin/cake.php mycommand myparam</code>.</p><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>register_argc_argv has to be turned on by including <code>register_argc_argv = 1</code> in your php.ini. If you cannot change register_argc_argv globally, you can tell the cron job to use your own configuration by specifying it with <code>-d register_argc_argv=1</code> parameter. Example: <code>php -d register_argc_argv=1 /full/path/to/root/bin/cake.php myshell myparam</code></p></div>`,9)])])}const g=a(o,[["render",t]]);export{k as __pageData,g as default};
