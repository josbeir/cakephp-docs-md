import{_ as a,c as i,o as n,ag as e}from"./chunks/framework.DRADY2L-.js";const d=JSON.parse('{"title":"Interactive Console (REPL)","description":"","frontmatter":{},"headers":[],"relativePath":"en/console-commands/repl.md","filePath":"en/console-commands/repl.md","lastUpdated":null}'),t={name:"en/console-commands/repl.md"};function l(p,s,h,r,k,c){return n(),i("div",null,[...s[0]||(s[0]=[e(`<h1 id="interactive-console-repl" tabindex="-1">Interactive Console (REPL) <a class="header-anchor" href="#interactive-console-repl" aria-label="Permalink to &quot;Interactive Console (REPL)&quot;">â€‹</a></h1><p>CakePHP offers <a href="https://github.com/cakephp/repl" target="_blank" rel="noreferrer">REPL(Read Eval Print Loop) plugin</a> to let you explore some CakePHP and your application in an interactive console.</p><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>The plugin was shipped with the CakePHP app skeleton before 4.3.</p></div><p>You can start the interactive console using:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bin/cake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> console</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>This will bootstrap your application and start an interactive console. At this point you can interact with your application code and execute queries using your application&#39;s models:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bin/cake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> console</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; $articles </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Cake</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">atasource</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\F</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">actoryLocator::get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;Table&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;Articles&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Cake\\ORM\\Table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)(</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$articles-&gt;find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-&gt;all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>Since your application has been bootstrapped you can also test routing using the REPL</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&gt;&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Cake\\Routing\\Router</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/articles/view/1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// [</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   &#39;controller&#39; =&gt; &#39;Articles&#39;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   &#39;action&#39; =&gt; &#39;view&#39;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   &#39;pass&#39; =&gt; [</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     0 =&gt; &#39;1&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   ],</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   &#39;plugin&#39; =&gt; NULL</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>You can also test generating URLs::</p><pre><code>&gt;&gt;&gt; Cake\\Routing\\Router::url([&#39;controller&#39; =&gt; &#39;Articles&#39;, &#39;action&#39; =&gt; &#39;edit&#39;, 99]);
// &#39;/articles/edit/99&#39;
</code></pre><p>To quit the REPL you can use <code>CTRL-C</code> or by typing <code>exit</code>.</p>`,12)])])}const g=a(t,[["render",l]]);export{d as __pageData,g as default};
