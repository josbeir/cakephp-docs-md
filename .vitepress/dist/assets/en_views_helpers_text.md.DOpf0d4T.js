import{_ as a,c as i,o as t,ag as s}from"./chunks/framework.DRADY2L-.js";const k=JSON.parse('{"title":"TextHelper","description":"The TextHelper contains methods to make text more usable and friendly in your views.","frontmatter":{"title":"TextHelper","description":"The TextHelper contains methods to make text more usable and friendly in your views.","keywords":"text helper,autoLinkEmails,autoLinkUrls,autoLink,excerpt,highlight,stripLinks,truncate,string text"},"headers":[],"relativePath":"en/views/helpers/text.md","filePath":"en/views/helpers/text.md","lastUpdated":null}'),n={name:"en/views/helpers/text.md"};function r(o,e,l,p,h,d){return t(),i("div",null,[...e[0]||(e[0]=[s('<h1 id="text" tabindex="-1">Text <a class="header-anchor" href="#text" aria-label="Permalink to &quot;Text&quot;">​</a></h1><p><strong>Namespace:</strong> <code>Cake\\View\\Helper</code></p><h3 id="class-cake-view-helper-texthelper-view-view-array-config" tabindex="-1">Class <code>Cake\\View\\Helper\\TextHelper(View $view, array $config = [])</code> <a class="header-anchor" href="#class-cake-view-helper-texthelper-view-view-array-config" aria-label="Permalink to &quot;Class `Cake\\View\\Helper\\TextHelper(View $view, array $config = [])`&quot;">​</a></h3><p>The TextHelper contains methods to make text more usable and friendly in your views. It aids in enabling links, formatting URLs, creating excerpts of text around chosen words or phrases, highlighting key words in blocks of text, and gracefully truncating long stretches of text.</p><h2 id="linking-email-addresses" tabindex="-1">Linking Email addresses <a class="header-anchor" href="#linking-email-addresses" aria-label="Permalink to &quot;Linking Email addresses&quot;">​</a></h2><h4 id="method-cake-view-helper-texthelper-view-view-array-config-autolinkemails-string-text-array-options" tabindex="-1">Method <code>Cake\\View\\Helper\\TextHelper(View $view, array $config = [])::autoLinkEmails(string $text, array $options = [])</code> <a class="header-anchor" href="#method-cake-view-helper-texthelper-view-view-array-config-autolinkemails-string-text-array-options" aria-label="Permalink to &quot;Method `Cake\\View\\Helper\\TextHelper(View $view, array $config = [])::autoLinkEmails(string $text, array $options = [])`&quot;">​</a></h4><p>Adds links to the well-formed email addresses in $text, according to any options defined in <code>$options</code> (see <code>HtmlHelper::link()</code>).</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$myText </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;For more information regarding our world-famous &#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> .</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;pastries and desserts, contact info@example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$linkedText </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> $this</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Text</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">autoLinkEmails</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($myText);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Output::</p><pre><code>For more information regarding our world-famous pastries and desserts,\ncontact &lt;a href=&quot;mailto:info@example.com&quot;&gt;info@example.com&lt;/a&gt;\n</code></pre><p>This method automatically escapes its input. Use the <code>escape</code> option to disable this if necessary.</p><h2 id="linking-urls" tabindex="-1">Linking URLs <a class="header-anchor" href="#linking-urls" aria-label="Permalink to &quot;Linking URLs&quot;">​</a></h2><h4 id="method-cake-view-helper-texthelper-view-view-array-config-autolinkurls-string-text-array-options" tabindex="-1">Method <code>Cake\\View\\Helper\\TextHelper(View $view, array $config = [])::autoLinkUrls(string $text, array $options = [])</code> <a class="header-anchor" href="#method-cake-view-helper-texthelper-view-view-array-config-autolinkurls-string-text-array-options" aria-label="Permalink to &quot;Method `Cake\\View\\Helper\\TextHelper(View $view, array $config = [])::autoLinkUrls(string $text, array $options = [])`&quot;">​</a></h4><p>Same as <code>autoLinkEmails()</code>, only this method searches for strings that start with https, http, ftp, or nntp and links them appropriately.</p><p>This method automatically escapes its input. Use the <code>escape</code> option to disable this if necessary.</p><h2 id="linking-both-urls-and-email-addresses" tabindex="-1">Linking Both URLs and Email Addresses <a class="header-anchor" href="#linking-both-urls-and-email-addresses" aria-label="Permalink to &quot;Linking Both URLs and Email Addresses&quot;">​</a></h2><h4 id="method-cake-view-helper-texthelper-view-view-array-config-autolink-string-text-array-options" tabindex="-1">Method <code>Cake\\View\\Helper\\TextHelper(View $view, array $config = [])::autoLink(string $text, array $options = [])</code> <a class="header-anchor" href="#method-cake-view-helper-texthelper-view-view-array-config-autolink-string-text-array-options" aria-label="Permalink to &quot;Method `Cake\\View\\Helper\\TextHelper(View $view, array $config = [])::autoLink(string $text, array $options = [])`&quot;">​</a></h4><p>Performs the functionality in both <code>autoLinkUrls()</code> and <code>autoLinkEmails()</code> on the supplied <code>$text</code>. All URLs and emails are linked appropriately given the supplied <code>$options</code>.</p><p>This method automatically escapes its input. Use the <code>escape</code> option to disable this if necessary.</p><p>Further options:</p><ul><li>``stripProtocol<code>: Strips </code><a href="http://%60" target="_blank" rel="noreferrer">http://`</a> and <code>https://</code> from the beginning of the link label. Default off.</li><li><code>maxLength</code>: The maximum length of the link label. Default off.</li><li>`ellipsis``: The string to append to the end of the link label. Defaults to UTF8 ellipsis.</li></ul><h2 id="converting-text-into-paragraphs" tabindex="-1">Converting Text into Paragraphs <a class="header-anchor" href="#converting-text-into-paragraphs" aria-label="Permalink to &quot;Converting Text into Paragraphs&quot;">​</a></h2><h4 id="method-cake-view-helper-texthelper-view-view-array-config-autoparagraph-string-text" tabindex="-1">Method <code>Cake\\View\\Helper\\TextHelper(View $view, array $config = [])::autoParagraph(string $text)</code> <a class="header-anchor" href="#method-cake-view-helper-texthelper-view-view-array-config-autoparagraph-string-text" aria-label="Permalink to &quot;Method `Cake\\View\\Helper\\TextHelper(View $view, array $config = [])::autoParagraph(string $text)`&quot;">​</a></h4><p>Adds proper <code>&lt;p&gt;</code> around text where double-line returns are found, and <code>&lt;br&gt;</code> where single-line returns are found.</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$myText </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;For more information</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">regarding our world-famous pastries and desserts.</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">contact info@example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$formattedText </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> $this</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Text</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">autoParagraph</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($myText);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Output::</p><pre><code>&lt;p&gt;For more information&lt;br /&gt;\nregarding our world-famous pastries and desserts.&lt;/p&gt;\n&lt;p&gt;contact info@example.com&lt;/p&gt;\n</code></pre><p>:start-after: start-text :end-before: end-text</p>',28)])])}const g=a(n,[["render",r]]);export{k as __pageData,g as default};
