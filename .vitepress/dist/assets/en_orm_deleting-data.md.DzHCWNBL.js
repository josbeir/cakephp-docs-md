import{_ as s,c as i,o as a,ag as t}from"./chunks/framework.DRADY2L-.js";const c=JSON.parse('{"title":"Deleting Data","description":"","frontmatter":{},"headers":[],"relativePath":"en/orm/deleting-data.md","filePath":"en/orm/deleting-data.md","lastUpdated":null}'),n={name:"en/orm/deleting-data.md"};function l(h,e,p,d,r,o){return a(),i("div",null,[...e[0]||(e[0]=[t(`<h1 id="deleting-data" tabindex="-1">Deleting Data <a class="header-anchor" href="#deleting-data" aria-label="Permalink to &quot;Deleting Data&quot;">​</a></h1><p><strong>Namespace:</strong> <code>Cake\\ORM</code></p><h3 id="class-cake-orm-table" tabindex="-1">Class <code>Cake\\ORM\\Table</code> <a class="header-anchor" href="#class-cake-orm-table" aria-label="Permalink to &quot;Class \`Cake\\ORM\\Table\`&quot;">​</a></h3><p>:noindex:</p><h4 id="method-cake-orm-table-delete-entityinterface-entity-array-options" tabindex="-1">Method <code>Cake\\ORM\\Table::delete(EntityInterface $entity, array $options = [])</code> <a class="header-anchor" href="#method-cake-orm-table-delete-entityinterface-entity-array-options" aria-label="Permalink to &quot;Method \`Cake\\ORM\\Table::delete(EntityInterface $entity, array $options = [])\`&quot;">​</a></h4><p>Once you&#39;ve loaded an entity you can delete it by calling the originating table&#39;s delete method</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// In a controller.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$entity </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> $this</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Articles</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> $this</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Articles</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">delete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($entity);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>When deleting entities a few things happen:</p><ol><li>The <a href="/en/orm/validation.html#application-rules">delete rules</a> will be applied. If the rules fail, deletion will be prevented.</li><li>The <code>Model.beforeDelete</code> event is triggered. If this event is stopped, the delete will be aborted and the event&#39;s result will be returned.</li><li>The entity will be deleted.</li><li>All dependent associations will be deleted. If associations are being deleted as entities, additional events will be dispatched.</li><li>Any junction table records for BelongsToMany associations will be removed.</li><li>The <code>Model.afterDelete</code> event will be triggered.</li></ol><p>By default all deletes happen within a transaction. You can disable the transaction with the atomic option</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> $this</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Articles</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">delete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($entity, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;atomic&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>The <code>$options</code> parameter supports the following options:</p><ul><li><code>atomic</code> Defaults to true. When true the deletion happens within a transaction.</li><li><code>checkRules</code> Defaults to true. Check deletion rules before deleting records.</li></ul><h3 id="cascading-deletes" tabindex="-1">Cascading Deletes <a class="header-anchor" href="#cascading-deletes" aria-label="Permalink to &quot;Cascading Deletes&quot;">​</a></h3><p>When deleting entities, associated data can also be deleted. If your HasOne and HasMany associations are configured as <code>dependent</code>, delete operations will &#39;cascade&#39; to those entities as well. By default entities in associated tables are removed using <code>Cake\\ORM\\Table::deleteAll()</code>. You can elect to have the ORM load related entities, and delete them individually by setting the <code>cascadeCallbacks</code> option to <code>true</code>. A sample HasMany association with both these options enabled would be</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// In a Table&#39;s initialize method.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$this</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hasMany</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Comments&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;dependent&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;cascadeCallbacks&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>Setting <code>cascadeCallbacks</code> to <code>true</code>, results in considerably slower deletes when compared to bulk deletes. The cascadeCallbacks option should only be enabled when your application has important work handled by event listeners.</p></div><h3 id="bulk-deletes" tabindex="-1">Bulk Deletes <a class="header-anchor" href="#bulk-deletes" aria-label="Permalink to &quot;Bulk Deletes&quot;">​</a></h3><h4 id="method-cake-orm-table-deletemany-iterable-entities-array-options" tabindex="-1">Method <code>Cake\\ORM\\Table::deleteMany(iterable $entities, array $options = [])</code> <a class="header-anchor" href="#method-cake-orm-table-deletemany-iterable-entities-array-options" aria-label="Permalink to &quot;Method \`Cake\\ORM\\Table::deleteMany(iterable $entities, array $options = [])\`&quot;">​</a></h4><p>If you have an array of entities you want to delete you can use <code>deleteMany()</code> to delete them in a single transaction</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Get a boolean indicating success</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$success </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> $this</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Articles</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deleteMany</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($entities);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Will throw a PersistenceFailedException if any entity cannot be deleted.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$this</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Articles</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deleteManyOrFail</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($entities);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>The <code>$options</code> for these methods are the same as <code>delete()</code>. Deleting records with these method <strong>will</strong> trigger events.</p><h4 id="method-cake-orm-table-deleteall-conditions" tabindex="-1">Method <code>Cake\\ORM\\Table::deleteAll($conditions)</code> <a class="header-anchor" href="#method-cake-orm-table-deleteall-conditions" aria-label="Permalink to &quot;Method \`Cake\\ORM\\Table::deleteAll($conditions)\`&quot;">​</a></h4><p>There may be times when deleting rows one by one is not efficient or useful. In these cases it is more performant to use a bulk-delete to remove many rows at once</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Delete all the spam</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> destroySpam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> $this</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deleteAll</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;is_spam&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>A bulk-delete will be considered successful if 1 or more rows are deleted. The function returns the number of deleted records as an integer.</p><div class="warning custom-block github-alert"><p class="custom-block-title">WARNING</p><p>deleteAll will <em>not</em> trigger beforeDelete/afterDelete events. If you need callbacks triggered, first load the entities with <code>find()</code> and delete them in a loop.</p></div><h3 id="strict-deletes" tabindex="-1">Strict Deletes <a class="header-anchor" href="#strict-deletes" aria-label="Permalink to &quot;Strict Deletes&quot;">​</a></h3><h4 id="method-cake-orm-table-deleteorfail-entityinterface-entity-array-options" tabindex="-1">Method <code>Cake\\ORM\\Table::deleteOrFail(EntityInterface $entity, array $options = [])</code> <a class="header-anchor" href="#method-cake-orm-table-deleteorfail-entityinterface-entity-array-options" aria-label="Permalink to &quot;Method \`Cake\\ORM\\Table::deleteOrFail(EntityInterface $entity, array $options = [])\`&quot;">​</a></h4><p>Using this method will throw an <code>Cake\\ORM\\Exception\\PersistenceFailedException</code> if:</p><ul><li>the entity is new</li><li>the entity has no primary key value</li><li>application rules checks failed</li><li>the delete was aborted by a callback.</li></ul><p>If you want to track down the entity that failed to delete, you can use the <code>Cake\\ORM\\Exception\\PersistenceFailedException::getEntity()</code> method</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $table</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deleteOrFail</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($entity);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\Cake\\ORM\\Exception\\PersistenceFailedException</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $e) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>As this internally performs a <code>Cake\\ORM\\Table::delete()</code> call, all corresponding delete events will be triggered.</p>`,34)])])}const g=s(n,[["render",l]]);export{c as __pageData,g as default};
